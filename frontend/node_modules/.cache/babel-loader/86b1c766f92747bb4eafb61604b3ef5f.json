{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{BrowserRouter as Router,Switch,Redirect}from'react-router-dom';import{startChecking}from'../actions/auth';import{LoginScreen}from'../components/auth/LoginScreen';import{CalendarScreen}from'../components/calendar/CalendarScreen';import{PrivateRoute}from'./PrivateRoute';import{PublicRoute}from'./PublicRoute';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AppRouter=function AppRouter(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),checking=_useSelector.checking,uid=_useSelector.uid;useEffect(function(){dispatch(startChecking());},[dispatch]);if(checking){return/*#__PURE__*/_jsx(\"h5\",{children:\"ESPERE....\"});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(PublicRoute,{exact:true,path:\"/login\",component:LoginScreen,isAuthenticated:!!uid}),/*#__PURE__*/_jsx(PrivateRoute,{exact:true,path:\"/\",component:CalendarScreen,isAuthenticated:!!uid}),/*#__PURE__*/_jsx(Redirect,{to:\"/\"})]})})});};","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/router/AppRouter.js"],"names":["React","useEffect","useDispatch","useSelector","BrowserRouter","Router","Switch","Redirect","startChecking","LoginScreen","CalendarScreen","PrivateRoute","PublicRoute","AppRouter","dispatch","state","auth","checking","uid"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,QAA1C,KAA0D,kBAA1D,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,WAAT,KAA4B,gCAA5B,CACA,OAASC,cAAT,KAA+B,uCAA/B,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,WAAT,KAA4B,eAA5B,C,wFAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAE3B,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAF2B,iBAIDC,WAAW,CAAC,SAAAY,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAN,CAJV,CAInBC,QAJmB,cAInBA,QAJmB,CAITC,GAJS,cAITA,GAJS,CAM3BjB,SAAS,CAAC,UAAM,CAEZa,QAAQ,CAACN,aAAa,EAAd,CAAR,CAEH,CAJQ,CAIN,CAACM,QAAD,CAJM,CAAT,CAMA,GAAIG,QAAJ,CAAc,CACV,mBAAQ,kCAAR,CACH,CAED,mBACI,KAAC,MAAD,wBACI,kCACI,MAAC,MAAD,yBACI,KAAC,WAAD,EAAa,KAAK,KAAlB,CAAmB,IAAI,CAAC,QAAxB,CAAiC,SAAS,CAAER,WAA5C,CAAyD,eAAe,CAAE,CAAC,CAACS,GAA5E,EADJ,cAEI,KAAC,YAAD,EAAc,KAAK,KAAnB,CAAoB,IAAI,CAAC,GAAzB,CAA6B,SAAS,CAAER,cAAxC,CAAwD,eAAe,CAAE,CAAC,CAACQ,GAA3E,EAFJ,cAII,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAJJ,GADJ,EADJ,EADJ,CAYH,CA5BM","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\nimport { startChecking } from '../actions/auth'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\nimport { PrivateRoute } from './PrivateRoute'\nimport { PublicRoute } from './PublicRoute'\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n\n        dispatch(startChecking());\n\n    }, [dispatch])\n\n    if (checking) {\n        return (<h5>ESPERE....</h5>)\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} />\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid} />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}