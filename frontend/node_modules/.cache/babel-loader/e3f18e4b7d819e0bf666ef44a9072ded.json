{"ast":null,"code":"import _regeneratorRuntime from\"/home/fabbry/Desktop/Mern-Calendari/calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/fabbry/Desktop/Mern-Calendari/calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Swal from'sweetalert2';import{types}from'../types/types';import{fetchConToken}from'../helpers/fetch';import{prepareEvents}from'../helpers/prepareEvents';export var eventStartAddNew=function eventStartAddNew(event){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var _getState$auth,uid,name,resp,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_getState$auth=getState().auth,uid=_getState$auth.uid,name=_getState$auth.name;_context.prev=1;_context.next=4;return fetchConToken('events',event,'POST');case 4:resp=_context.sent;_context.next=7;return resp.json();case 7:body=_context.sent;console.log(body);if(body.ok){event.id=body.evento.id;event.user={_id:uid,name:name};console.log(event);dispatch(eventAddNew(event));}_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,12]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};var eventAddNew=function eventAddNew(event){return{type:types.eventAddNew,payload:event};};export var eventSetActive=function eventSetActive(event){return{type:types.eventSetActive,payload:event};};export var eventClearActiveEvent=function eventClearActiveEvent(){return{type:types.eventClearActiveEvent};};export var eventStartUpdate=function eventStartUpdate(event){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var resp,body;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetchConToken(\"events/\".concat(event.id),event,'PUT');case 3:resp=_context2.sent;_context2.next=6;return resp.json();case 6:body=_context2.sent;if(body.ok){dispatch(eventUpdated(event));}else{Swal.fire('Error',body.msg,'error');}_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function(_x3){return _ref2.apply(this,arguments);};}();};var eventUpdated=function eventUpdated(event){return{type:types.eventUpdated,payload:event};};export var eventStartDelete=function eventStartDelete(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var id,resp,body;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:id=getState().calendar.activeEvent.id;_context3.prev=1;_context3.next=4;return fetchConToken(\"events/\".concat(id),{},'DELETE');case 4:resp=_context3.sent;_context3.next=7;return resp.json();case 7:body=_context3.sent;if(body.ok){dispatch(eventDeleted());}else{Swal.fire('Error',body.msg,'error');}_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](1);console.log(_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[1,11]]);}));return function(_x4,_x5){return _ref3.apply(this,arguments);};}();};var eventDeleted=function eventDeleted(){return{type:types.eventDeleted};};export var eventStartLoading=function eventStartLoading(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var resp,body,events;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetchConToken('events');case 3:resp=_context4.sent;_context4.next=6;return resp.json();case 6:body=_context4.sent;events=prepareEvents(body.eventos);dispatch(eventLoaded(events));_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[0,11]]);}));return function(_x6){return _ref4.apply(this,arguments);};}();};var eventLoaded=function eventLoaded(events){return{type:types.eventLoaded,payload:events};};export var eventLogout=function eventLogout(){return{type:types.eventLogout};};","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/actions/events.js"],"names":["Swal","types","fetchConToken","prepareEvents","eventStartAddNew","event","dispatch","getState","auth","uid","name","resp","json","body","console","log","ok","id","evento","user","_id","eventAddNew","type","payload","eventSetActive","eventClearActiveEvent","eventStartUpdate","eventUpdated","fire","msg","eventStartDelete","calendar","activeEvent","eventDeleted","eventStartLoading","events","eventos","eventLoaded","eventLogout"],"mappings":"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","sourcesContent":["import Swal from 'sweetalert2';\n\nimport { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\n\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if (body.ok) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log(event);\n                dispatch(eventAddNew(event));\n            }\n\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n\n\n    }\n}\n\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\n\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventUpdated(event));\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventDeleted());\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n\n        try {\n\n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n\n            const events = prepareEvents(body.eventos);\n            dispatch(eventLoaded(events));\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout = () => ({ type: types.eventLogout });"]},"metadata":{},"sourceType":"module"}