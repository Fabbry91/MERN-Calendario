{"ast":null,"code":"//import moment from 'moment'\nimport { types } from '../types/types';\n/*{\n    id: new Date().getTime(),\n    title: 'CumpleaÃ±os del jefe',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    bgcolor: \"#fafafa\",\n    notas: 'hello',\n    user: {\n        _id: '1230',\n        name: 'Fabbry'\n    }\n}*/\n\nconst initialState = {\n  events: [],\n  activeEvent: null\n};\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return { ...state,\n        activeEvent: action.payload\n      };\n\n    case types.eventAddNew:\n      return { ...state,\n        events: [...state.events, action.payload]\n      };\n\n    case types.eventClearActiveEvent:\n      return { ...state,\n        activeEvent: null\n      };\n\n    case types.eventUpdate:\n      return { ...state,\n        events: state.events.map(e => e.id === action.payload.id ? action.payload : e)\n      };\n\n    case types.eventDelete:\n      return { ...state,\n        events: state.events.filter(e => e.id === state.activeEvent.id),\n        activeEvent: null\n      };\n\n    case types.eventLoaded:\n      return { ...state,\n        events: [...action.payload]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/reducers/calandarReducer.js"],"names":["types","initialState","events","activeEvent","calendarReducer","state","action","type","eventSetActive","payload","eventAddNew","eventClearActiveEvent","eventUpdate","map","e","id","eventDelete","filter","eventLoaded"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;AAKA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAE7D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKP,KAAK,CAACQ,cAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFjB,OAAP;;AAKJ,SAAKT,KAAK,CAACU,WAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,MAAM,EAAE,CACJ,GAAGG,KAAK,CAACH,MADL,EAEJI,MAAM,CAACG,OAFH;AAFL,OAAP;;AAQJ,SAAKT,KAAK,CAACW,qBAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAKJ,SAAKH,KAAK,CAACY,WAAX;AACI,aAAO,EACH,GAAGP,KADA;AAEHH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaW,GAAb,CACJC,CAAC,IAAKA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACG,OAAP,CAAeM,EAAzB,GAA+BT,MAAM,CAACG,OAAtC,GAAgDK,CADjD;AAFL,OAAP;;AAOJ,SAAKd,KAAK,CAACgB,WAAX;AACI,aAAO,EACH,GAAGX,KADA;AAEHH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAae,MAAb,CACJH,CAAC,IAAKA,CAAC,CAACC,EAAF,KAASV,KAAK,CAACF,WAAN,CAAkBY,EAD7B,CAFL;AAKHZ,QAAAA,WAAW,EAAE;AALV,OAAP;;AAQJ,SAAKH,KAAK,CAACkB,WAAX;AACI,aAAO,EACH,GAAGb,KADA;AAEHH,QAAAA,MAAM,EAAE,CAAC,GAAGI,MAAM,CAACG,OAAX;AAFL,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AA/CR;AAiDH,CAnDM","sourcesContent":["//import moment from 'moment'\nimport { types } from '../types/types';\n\n/*{\n    id: new Date().getTime(),\n    title: 'CumpleaÃ±os del jefe',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    bgcolor: \"#fafafa\",\n    notas: 'hello',\n    user: {\n        _id: '1230',\n        name: 'Fabbry'\n    }\n}*/\n\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n\n        case types.eventDelete:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id === state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}