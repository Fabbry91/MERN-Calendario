{"ast":null,"code":"var _jsxFileName = \"/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/components/calendar/CalendarScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport { uiOpenModal } from '../../actions/ui';\nimport { Nabvar } from '../ui/Nabvar';\nimport { messages } from '../../helpers/calendar-messages';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch } from 'react-redux';\nimport { eventSetActive } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('es');\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nconst events = [{\n  title: 'Cumpleaños del jefe',\n  start: moment().toDate(),\n  end: moment().add(2, 'hours').toDate(),\n  bgcolor: \"#fafafa\",\n  notas: 'hello',\n  user: {\n    _id: '1230',\n    name: 'Fabbry'\n  }\n}];\nexport const CalendarScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onDoubleClick = e => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = e => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = e => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const eventStyleGetter = (event, start, end, bgcolor, notes) => {\n    const style = {\n      backgroundColor: '#367CF7',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    };\n    return {\n      style\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Nabvar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      messages: messages,\n      eventPropGetter: eventStyleGetter,\n      components: {\n        event: CalendarEvent\n      },\n      onView: onViewChange,\n      view: lastView,\n      onDoubleClickEvent: onDoubleClick,\n      onSelectEvent: onSelectEvent,\n      onViewChange: onViewChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddNewFab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalendarScreen, \"AQbr+hlJqk5/uxwqD4YnRz/YHrk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CalendarScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarScreen\");","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/components/calendar/CalendarScreen.js"],"names":["React","useState","Calendar","momentLocalizer","moment","uiOpenModal","Nabvar","messages","CalendarEvent","CalendarModal","useDispatch","eventSetActive","AddNewFab","locale","localizer","events","title","start","toDate","end","add","bgcolor","notas","user","_id","name","CalendarScreen","dispatch","lastView","setLastView","localStorage","getItem","onDoubleClick","e","onSelectEvent","onViewChange","setItem","eventStyleGetter","event","notes","style","backgroundColor","borderRadius","opacity","display","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport { uiOpenModal } from '../../actions/ui';\n\nimport { Nabvar } from '../ui/Nabvar';\nimport { messages } from '../../helpers/calendar-messages';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch } from 'react-redux';\nimport { eventSetActive } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nconst events = [{\n    title: 'Cumpleaños del jefe',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    bgcolor: \"#fafafa\",\n    notas: 'hello',\n    user: {\n        _id: '1230',\n        name: 'Fabbry'\n    }\n}]\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal());\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const eventStyleGetter = (event, start, end, bgcolor, notes) => {\n        const style = {\n            backgroundColor: '#367CF7',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return {\n            style\n        }\n\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Nabvar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                components={{\n                    event: CalendarEvent\n                }}\n                onView={onViewChange}\n                view={lastView}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onViewChange={onViewChange}\n            />\n\n            <CalendarModal />\n            <AddNewFab />\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}