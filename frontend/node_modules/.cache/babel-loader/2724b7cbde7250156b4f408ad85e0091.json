{"ast":null,"code":"var _jsxFileName = \"/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/router/AppRouter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppRouter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    checking,\n    uid\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"ESPERE....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(PublicRoute, {\n          exact: true,\n          path: \"/login\",\n          component: LoginScreen,\n          isAuthenticated: !!uid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/\",\n          component: CalendarScreen,\n          isAuthenticated: !!uid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouter, \"uqRYbPj019RiVYG8xvLlU3P9AWw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/router/AppRouter.js"],"names":["React","useEffect","useDispatch","useSelector","BrowserRouter","Router","Switch","Route","Redirect","startChecking","LoginScreen","CalendarScreen","PrivateRoute","PublicRoute","AppRouter","dispatch","checking","uid","state","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAoBd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAArC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AAEZc,IAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AAEH,GAJQ,EAIN,CAACM,QAAD,CAJM,CAAT;;AAMA,MAAIC,QAAJ,EAAc;AACV,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AAED,sBACI,QAAC,MAAD;AAAA,2BACI;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,WAAD;AAAa,UAAA,KAAK,MAAlB;AAAmB,UAAA,IAAI,EAAC,QAAxB;AAAiC,UAAA,SAAS,EAAEN,WAA5C;AAAyD,UAAA,eAAe,EAAE,CAAC,CAACO;AAA5E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,KAAK,MAAnB;AAAoB,UAAA,IAAI,EAAC,GAAzB;AAA6B,UAAA,SAAS,EAAEN,cAAxC;AAAwD,UAAA,eAAe,EAAE,CAAC,CAACM;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA5BM;;GAAMH,S;UAEQZ,W,EAESC,W;;;KAJjBW,S","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { startChecking } from '../actions/auth'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\nimport { PrivateRoute } from './PrivateRoute'\nimport { PublicRoute } from './PublicRoute'\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n\n        dispatch(startChecking());\n\n    }, [dispatch])\n\n    if (checking) {\n        return (<h5>ESPERE....</h5>)\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} />\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid} />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}