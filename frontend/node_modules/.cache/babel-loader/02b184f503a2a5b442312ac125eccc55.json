{"ast":null,"code":"import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const eventStartAddNew = event => {\n  return async dispatch => {\n    try {\n      const resp = fetchConToken('events', event, 'POST');\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: '',\n          name: ''\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {}\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event\n});\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent\n});\nexport const eventUpdate = event => ({\n  type: types.eventUpdate,\n  payload: event\n});\nexport const eventDelete = event => ({\n  type: types.eventDelete\n});","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/actions/events.js"],"names":["fetchConToken","types","eventStartAddNew","event","dispatch","resp","body","json","ok","id","user","_id","name","eventAddNew","error","type","payload","eventSetActive","eventClearActiveEvent","eventUpdate","eventDelete"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMC,IAAI,GAAGL,aAAa,CAAC,QAAD,EAAWG,KAAX,EAAkB,MAAlB,CAA1B;AACA,YAAMG,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;;AAEA,UAAID,IAAI,CAACE,EAAT,EAAa;AACTL,QAAAA,KAAK,CAACM,EAAN,GAAWH,IAAI,CAACH,KAAL,CAAWM,EAAtB;AACAN,QAAAA,KAAK,CAACO,IAAN,GAAa;AACTC,UAAAA,GAAG,EAAE,EADI;AAETC,UAAAA,IAAI,EAAE;AAFG,SAAb;AAIAR,QAAAA,QAAQ,CAACS,WAAW,CAACV,KAAD,CAAZ,CAAR;AACH;AACJ,KAZD,CAYE,OAAOW,KAAP,EAAc,CAAG;AACtB,GAdD;AAeH,CAhBM;;AAkBP,MAAMD,WAAW,GAAIV,KAAD,KAAY;AAC5BY,EAAAA,IAAI,EAAEd,KAAK,CAACY,WADgB;AAE5BG,EAAAA,OAAO,EAAEb;AAFmB,CAAZ,CAApB;;AAKA,OAAO,MAAMc,cAAc,GAAId,KAAD,KAAY;AACtCY,EAAAA,IAAI,EAAEd,KAAK,CAACgB,cAD0B;AAEtCD,EAAAA,OAAO,EAAEb;AAF6B,CAAZ,CAAvB;AAKP,OAAO,MAAMe,qBAAqB,GAAG,OAAO;AACxCH,EAAAA,IAAI,EAAEd,KAAK,CAACiB;AAD4B,CAAP,CAA9B;AAIP,OAAO,MAAMC,WAAW,GAAIhB,KAAD,KAAY;AACnCY,EAAAA,IAAI,EAAEd,KAAK,CAACkB,WADuB;AAEnCH,EAAAA,OAAO,EAAEb;AAF0B,CAAZ,CAApB;AAKP,OAAO,MAAMiB,WAAW,GAAIjB,KAAD,KAAY;AACnCY,EAAAA,IAAI,EAAEd,KAAK,CAACmB;AADuB,CAAZ,CAApB","sourcesContent":["import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch) => {\n        try {\n            const resp = fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: '',\n                    name: '',\n                }\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) { }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventUpdate = (event) => ({\n    type: types.eventUpdate,\n    payload: event\n});\n\nexport const eventDelete = (event) => ({\n    type: types.eventDelete\n});"]},"metadata":{},"sourceType":"module"}