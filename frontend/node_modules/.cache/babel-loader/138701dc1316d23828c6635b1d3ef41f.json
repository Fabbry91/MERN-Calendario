{"ast":null,"code":"import _slicedToArray from\"/home/fabbry/Desktop/Mern-Calendari/calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Calendar,momentLocalizer}from'react-big-calendar';import{useDispatch,useSelector}from'react-redux';import moment from'moment';import{Navbar}from'../ui/Navbar';import{messages}from'../../helpers/calendar-messages-es';import{CalendarEvent}from'./CalendarEvent';import{CalendarModal}from'./CalendarModal';import{uiOpenModal}from'../../actions/ui';import'react-big-calendar/lib/css/react-big-calendar.css';import'moment/locale/es';import{eventSetActive,eventClearActiveEvent,eventStartLoading}from'../../actions/events';import{AddNewFab}from'../ui/AddNewFab';import{DeleteEventFab}from'../ui/DeleteEventFab';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";moment.locale('es');var localizer=momentLocalizer(moment);export var CalendarScreen=function CalendarScreen(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.calendar;}),events=_useSelector.events,activeEvent=_useSelector.activeEvent;var _useSelector2=useSelector(function(state){return state.auth;}),uid=_useSelector2.uid;var _useState=useState(localStorage.getItem('lastView')||'month'),_useState2=_slicedToArray(_useState,2),lastView=_useState2[0],setLastView=_useState2[1];useEffect(function(){dispatch(eventStartLoading());},[dispatch]);var onDoubleClick=function onDoubleClick(e){// console.log(e);\ndispatch(uiOpenModal());};var onSelectEvent=function onSelectEvent(e){dispatch(eventSetActive(e));};var onViewChange=function onViewChange(e){setLastView(e);localStorage.setItem('lastView',e);};var onSelectSlot=function onSelectSlot(e){// console.log(e)\ndispatch(eventClearActiveEvent());};var eventStyleGetter=function eventStyleGetter(event,start,end,isSelected){var style={backgroundColor:uid===event.user._id?'#367CF7':'#465660',borderRadius:'0px',opacity:0.8,display:'block',color:'white'};return{style:style};};return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-screen\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:events,startAccessor:\"start\",endAccessor:\"end\",messages:messages,eventPropGetter:eventStyleGetter,onDoubleClickEvent:onDoubleClick,onSelectEvent:onSelectEvent,onView:onViewChange,onSelectSlot:onSelectSlot,selectable:true,view:lastView,components:{event:CalendarEvent}}),/*#__PURE__*/_jsx(AddNewFab,{}),activeEvent&&/*#__PURE__*/_jsx(DeleteEventFab,{}),/*#__PURE__*/_jsx(CalendarModal,{})]});};","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/components/calendar/CalendarScreen.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","useDispatch","useSelector","moment","Navbar","messages","CalendarEvent","CalendarModal","uiOpenModal","eventSetActive","eventClearActiveEvent","eventStartLoading","AddNewFab","DeleteEventFab","locale","localizer","CalendarScreen","dispatch","state","calendar","events","activeEvent","auth","uid","localStorage","getItem","lastView","setLastView","onDoubleClick","e","onSelectEvent","onViewChange","setItem","onSelectSlot","eventStyleGetter","event","start","end","isSelected","style","backgroundColor","user","_id","borderRadius","opacity","display","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n\n        dispatch(eventStartLoading());\n\n    }, [dispatch])\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch(uiOpenModal());\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch(eventClearActiveEvent());\n    }\n\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n\n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}