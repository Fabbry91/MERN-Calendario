{"ast":null,"code":"import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const eventStartAddNew = event => {\n  return async (dispatch, getState) => {\n    const {\n      uid,\n      name\n    } = getState().auth;\n\n    try {\n      const resp = fetchConToken('events', event, 'POST');\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.evento.id;\n        event.user = {\n          _id: uid,\n          name: name\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event\n});\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent\n});\nexport const eventUpdate = event => ({\n  type: types.eventUpdate,\n  payload: event\n});\nexport const eventDelete = event => ({\n  type: types.eventDelete\n});\nexport const eventStartLoading = () => {\n  return async dispatch => {\n    try {\n      const resp = await fetchConToken('events');\n      const body = await resp.json();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = events => ({\n  type: types.eventLoaded,\n  payload: events\n});","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/actions/events.js"],"names":["fetchConToken","types","eventStartAddNew","event","dispatch","getState","uid","name","auth","resp","body","json","ok","id","evento","user","_id","eventAddNew","error","console","log","type","payload","eventSetActive","eventClearActiveEvent","eventUpdate","eventDelete","eventStartLoading","eventLoaded","events"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEjC,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAgBF,QAAQ,GAAGG,IAAjC;;AAEA,QAAI;AACA,YAAMC,IAAI,GAAGT,aAAa,CAAC,QAAD,EAAWG,KAAX,EAAkB,MAAlB,CAA1B;AACA,YAAMO,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;;AAEA,UAAID,IAAI,CAACE,EAAT,EAAa;AACTT,QAAAA,KAAK,CAACU,EAAN,GAAWH,IAAI,CAACI,MAAL,CAAYD,EAAvB;AACAV,QAAAA,KAAK,CAACY,IAAN,GAAa;AACTC,UAAAA,GAAG,EAAEV,GADI;AAETC,UAAAA,IAAI,EAAEA;AAFG,SAAb;AAIAH,QAAAA,QAAQ,CAACa,WAAW,CAACd,KAAD,CAAZ,CAAR;AACH;AACJ,KAZD,CAYE,OAAOe,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAnBD;AAoBH,CArBM;;AAuBP,MAAMD,WAAW,GAAId,KAAD,KAAY;AAC5BkB,EAAAA,IAAI,EAAEpB,KAAK,CAACgB,WADgB;AAE5BK,EAAAA,OAAO,EAAEnB;AAFmB,CAAZ,CAApB;;AAKA,OAAO,MAAMoB,cAAc,GAAIpB,KAAD,KAAY;AACtCkB,EAAAA,IAAI,EAAEpB,KAAK,CAACsB,cAD0B;AAEtCD,EAAAA,OAAO,EAAEnB;AAF6B,CAAZ,CAAvB;AAKP,OAAO,MAAMqB,qBAAqB,GAAG,OAAO;AACxCH,EAAAA,IAAI,EAAEpB,KAAK,CAACuB;AAD4B,CAAP,CAA9B;AAIP,OAAO,MAAMC,WAAW,GAAItB,KAAD,KAAY;AACnCkB,EAAAA,IAAI,EAAEpB,KAAK,CAACwB,WADuB;AAEnCH,EAAAA,OAAO,EAAEnB;AAF0B,CAAZ,CAApB;AAKP,OAAO,MAAMuB,WAAW,GAAIvB,KAAD,KAAY;AACnCkB,EAAAA,IAAI,EAAEpB,KAAK,CAACyB;AADuB,CAAZ,CAApB;AAIP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAO,MAAOvB,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMK,IAAI,GAAG,MAAMT,aAAa,CAAC,QAAD,CAAhC;AACA,YAAMU,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;AACH,KAHD,CAGE,OAAOO,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAPD;AAQH,CATM;;AAUP,MAAMU,WAAW,GAAIC,MAAD,KAAa;AAC7BR,EAAAA,IAAI,EAAEpB,KAAK,CAAC2B,WADiB;AAE7BN,EAAAA,OAAO,EAAEO;AAFoB,CAAb,CAApB","sourcesContent":["import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if (body.ok) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name,\n                }\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventUpdate = (event) => ({\n    type: types.eventUpdate,\n    payload: event\n});\n\nexport const eventDelete = (event) => ({\n    type: types.eventDelete\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})"]},"metadata":{},"sourceType":"module"}