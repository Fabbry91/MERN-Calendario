{"ast":null,"code":"import React,{useEffect}from'react';import{BrowserRouter as Router,Switch,Redirect}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{LoginScreen}from'../components/auth/LoginScreen';import{CalendarScreen}from'../components/calendar/CalendarScreen';import{startChecking}from'../actions/auth';import{PublicRoute}from'./PublicRoute';import{PrivateRoute}from'./PrivateRoute';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AppRouter=function AppRouter(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),checking=_useSelector.checking,uid=_useSelector.uid;useEffect(function(){dispatch(startChecking());},[dispatch]);if(checking){return/*#__PURE__*/_jsx(\"h5\",{children:\"Espere...\"});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(PublicRoute,{exact:true,path:\"/login\",component:LoginScreen,isAuthenticated:!!uid}),/*#__PURE__*/_jsx(PrivateRoute,{exact:true,path:\"/\",component:CalendarScreen,isAuthenticated:!!uid}),/*#__PURE__*/_jsx(Redirect,{to:\"/\"})]})})});};","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/router/AppRouter.js"],"names":["React","useEffect","BrowserRouter","Router","Switch","Redirect","useDispatch","useSelector","LoginScreen","CalendarScreen","startChecking","PublicRoute","PrivateRoute","AppRouter","dispatch","state","auth","checking","uid"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OACIC,aAAa,GAAIC,CAAAA,MADrB,CAEIC,MAFJ,CAGIC,QAHJ,KAIS,kBAJT,CAMA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,WAAT,KAA4B,gCAA5B,CACA,OAASC,cAAT,KAA+B,uCAA/B,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,YAAT,KAA6B,gBAA7B,C,wFAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAE3B,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAF2B,iBAGDC,WAAW,CAAE,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAP,CAHV,CAGnBC,QAHmB,cAGnBA,QAHmB,CAGTC,GAHS,cAGTA,GAHS,CAK3BjB,SAAS,CAAC,UAAM,CAEZa,QAAQ,CAAEJ,aAAa,EAAf,CAAR,CAEH,CAJQ,CAIN,CAACI,QAAD,CAJM,CAAT,CAMA,GAAKG,QAAL,CAAgB,CACZ,mBAAQ,iCAAR,CACH,CAED,mBACI,KAAC,MAAD,wBACI,kCACI,MAAC,MAAD,yBAEI,KAAC,WAAD,EACI,KAAK,KADT,CAEI,IAAI,CAAC,QAFT,CAGI,SAAS,CAAGT,WAHhB,CAII,eAAe,CAAG,CAAC,CAACU,GAJxB,EAFJ,cASI,KAAC,YAAD,EACI,KAAK,KADT,CAEI,IAAI,CAAC,GAFT,CAGI,SAAS,CAAGT,cAHhB,CAII,eAAe,CAAG,CAAC,CAACS,GAJxB,EATJ,cAgBI,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAhBJ,GADJ,EADJ,EADJ,CAwBH,CAvCM","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n  \nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}