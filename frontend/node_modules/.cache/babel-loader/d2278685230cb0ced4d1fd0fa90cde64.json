{"ast":null,"code":"import _defineProperty from\"/home/fabbry/Desktop/Mern-Calendari/calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/fabbry/Desktop/Mern-Calendari/calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/fabbry/Desktop/Mern-Calendari/calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';export var useForm=function useForm(){var initialState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var reset=function reset(){setValues(initialState);};var handleInputChange=function handleInputChange(_ref){var target=_ref.target;setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},target.name,target.value)));};return[values,handleInputChange,reset];};","map":{"version":3,"sources":["/home/fabbry/Desktop/Mern-Calendari/calendar-app/src/hooks/useForm.js"],"names":["useState","useForm","initialState","values","setValues","reset","handleInputChange","target","name","value"],"mappings":"sfAAA,OAASA,QAAT,KAAyB,OAAzB,CAGA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAyB,IAAvBC,CAAAA,YAAuB,2DAAR,EAAQ,eAEhBF,QAAQ,CAACE,YAAD,CAFQ,wCAErCC,MAFqC,eAE7BC,SAF6B,eAI5C,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChBD,SAAS,CAAEF,YAAF,CAAT,CACH,CAFD,CAKA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CAEtCH,SAAS,gCACFD,MADE,wBAEHI,MAAM,CAACC,IAFJ,CAEYD,MAAM,CAACE,KAFnB,GAAT,CAKH,CAPD,CASA,MAAO,CAAEN,MAAF,CAAUG,iBAAV,CAA6BD,KAA7B,CAAP,CAEH,CApBM","sourcesContent":["import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}"]},"metadata":{},"sourceType":"module"}